module.exports = {
  'browserServerImpl.ts': [ '**' ],

  // CLI should only use client-side features.
  'cli/': [
    '..',
    'cli/**',
    'client/**',
    'debug/injected/',
    'generated/',
    'grid/**',
    'server/injected/',
    'server/trace/**',
    'utils/**',
  ],

  'cli/driver.ts': [
    '..',
    '**',
  ],

  // Client depends on chromium protocol for types.
  'client/': [
    '../types/**',
    'common/',
    'protocol/',
    'server/chromium/protocol.d.ts',
    'utils/',
  ],

  'dispatchers/': [
    'common/',
    'protocol/',
    'server/**',
    'utils/'
  ],

  // Grid
  'grid/': [
    'client/',
    'dispatchers/**',
    'server/',
    'utils/**',
  ],

  'inProcessFactory.ts': [ '**' ],

  'outofprocess.ts': [
    'client/',
    'protocol/',
    'utils/'
  ],

  'protocol/': [
    'utils/'
  ],

  // Generic dependencies for server-side code.
  'server/': [
    '../types/types.d.ts',
    'common/',
    'generated/',
    'protocol/**',
    // Can depend on any files in these subdirectories.
    'server/',
    // Can depend on files directly in the server directory.
    'server/common/**',
    'server/injected/**',
    'server/supplements/**',
    // For fetch ?!?
    'server/trace/recorder/tracing.ts',
    'utils/',
  ],

  // No dependencies for code shared between node and page.
  'server/common/': [],

  // Strict dependencies for injected code.
  'server/injected/': [
    'server/common/', 'protocol/channels.ts'
  ],

  // Electron and Clank use chromium internally.
  'server/android/': [
    'common/',
    'generated/',
    'protocol/',
    'protocol/**',
    'server/',
    'server/chromium/',
    'server/common/**',
    'server/injected/**',
    'server/supplements/**',
    'utils/',
  ],

  'server/browserContext.ts': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/common/**',
    'server/injected/**',
    'server/supplements/**',
    'server/trace/recorder/tracing.ts',
    'utils/',
  ],

  'server/electron/': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/chromium/',
    'server/common/**',
    'server/injected/**',
    'server/supplements/**',
    'utils/',
  ],

  'server/playwright.ts': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/android/',
    'server/chromium/',
    'server/common/**',
    'server/electron/',
    'server/firefox/',
    'server/injected/**',
    'server/supplements/**',
    'server/webkit/',
    'utils/',
  ],

  'server/supplements/recorder/recorderApp.ts': [
    'common/',
    'server/',
    'server/chromium/',
    'utils/',
  ],

  'server/supplements/recorderSupplement.ts': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/common/**',
    'server/injected/**',
    'server/snapshot/',
    'server/supplements/**',
    'utils/',
  ],


  // Trace viewer
  'server/trace/common/': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/common/**',
    'server/injected/**',
    'server/snapshot/',
    'server/supplements/**',
    'utils/',
  ],

  // For testing
  'server/trace/test/': [
    '@trace-viewer/**',
    '**',
  ],

  'server/trace/recorder/': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/common/**',
    'server/injected/**',
    'server/snapshot/',
    'server/supplements/**',
    'server/trace/common/',
    'utils/',
  ],

  'server/trace/viewer/': [
    'common/',
    'generated/',
    'protocol/**',
    'server/',
    'server/chromium/',
    'server/common/**',
    'server/injected/**',
    'server/snapshot/',
    'server/supplements/**',
    'server/trace/common/',
    'server/trace/recorder/',
    'utils/',
  ],

  // The service is a cross-cutting feature, and so it depends on a bunch of things.
  'remote/': [
    'client/',
    'debug/',
    'dispatchers/',
    'server/',
    'server/electron/',
    'server/supplements/',
    'server/trace/',
    'utils/**',
  ],

  'utils/': [
    'common/',
    'protocol/',
    'third_party/diff_match_patch',
  ],
};
